{"version":3,"file":"static/js/372.e599fabf.chunk.js","mappings":"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","sources":["Hooks/useNetwork.js","pages/Errors/OfflinePage.jsx","pages/HomePage/components/Search.jsx","pages/HomePage/components/CustomSelect.jsx","pages/HomePage/components/Controls.jsx","pages/HomePage/components/CountriesList.jsx","pages/HomePage/components/countriesCard/Card/CardStyled.js","pages/HomePage/components/countriesCard/Card/Card.jsx","pages/HomePage/components/countriesCard/countriesCard.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport const useNetwork = () => {\r\n  const [isOnline, setOnline] = useState(true);\r\n\r\n  function updateNetworkStatus() {\r\n    setOnline(navigator.onLine);\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"online\", updateNetworkStatus);\r\n    window.addEventListener(\"offline\", updateNetworkStatus);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"online\", updateNetworkStatus);\r\n      window.removeEventListener(\"offline\", updateNetworkStatus);\r\n    };\r\n  }, []);\r\n\r\n  return isOnline;\r\n};\r\n","import { RiWifiOffLine } from \"react-icons/ri\";\r\nimport { CenteringContainer } from \"../../components/Container\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ConnectionIcon = styled(RiWifiOffLine)`\r\n  width: 100%;\r\n  height: 30%;\r\n`;\r\n\r\nconst Title = styled.h1``;\r\n\r\nconst SubTitle = styled.h3``;\r\n\r\nconst ReloadButton = styled.button`\r\n  margin-top: 20px;\r\n  padding: 10px 20px;\r\n  background-color: var(--colors-ui-base);\r\n  box-shadow: var(--shadow);\r\n  color: var(--colors-text);\r\n  border-radius: var(--radius);\r\n  font-size: var(--fs-md);\r\n  font-weight: var(--fw-normal);\r\n  text-decoration: none;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default function OfflinePage() {\r\n  return (\r\n    <CenteringContainer>\r\n      <ConnectionIcon />\r\n      <Title>OFFLINE</Title>\r\n      <SubTitle>Please check your internet connection</SubTitle>\r\n      <ReloadButton onClick={() => window.location.reload()}>\r\n        RETRY\r\n      </ReloadButton>\r\n    </CenteringContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { IoSearch } from \"react-icons/io5\";\r\n\r\nconst InputContainer = styled.label`\r\n  background-color: var(--colors-ui-base);\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  border-radius: var(--radius);\r\n  box-shadow: var(--shadow);\r\n  width: 246px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input.attrs({\r\n  type: \"search\",\r\n  placeholder: \"Search for a country...\",\r\n})`\r\n  margin-left: 2rem;\r\n  border: none;\r\n  outline: none;\r\n  color: var(--colors-text);\r\n  background-color: var(--colors-ui-base);\r\n`;\r\n\r\nexport default function Search({ value, onChange }) {\r\n  return (\r\n    <InputContainer>\r\n      <IoSearch style={{position: 'absolute'}}/>\r\n      <Input value={value} onChange={onChange} />\r\n    </InputContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport Select from \"react-select\";\r\n\r\nconst CustomSelect = styled(Select).attrs({\r\n  styles: {\r\n    control: (provided) => ({\r\n      ...provided,\r\n      cursor: \"pointer\",\r\n      backgroundColor: \"var(--colors-ui-base)\",\r\n      borderRadius: \"var(--radius)\",\r\n      padding: \"0.25rem\",\r\n      border: \"none\",\r\n      boxShadow: \"var(--shadow)\",\r\n      width: \"15.365rem\",\r\n      height: \"3.125rem\",\r\n      paddingLeft: \"1rem\",\r\n    }),\r\n    singleValue: (provided) => ({\r\n      ...provided,\r\n      color: \"var(--colors-text)\",\r\n    }),\r\n    dropdownIndicator: (provided) => ({\r\n      ...provided,\r\n      color: \"var(--colors-text)\",\r\n    }),\r\n    indicatorSeparator: (provided) => ({\r\n      ...provided,\r\n      display: \"none\",\r\n    }),\r\n    clearIndicator: (provided) => ({\r\n      ...provided,\r\n      color: \"var(--colors-text)\",\r\n    }),\r\n    option: (provided, state) => ({\r\n      ...provided,\r\n      cursor: \"pointer\",\r\n      color: \"var(--colors-text)\",\r\n      backgroundColor: state.isSelected\r\n        ? \"var(--colors-bg)\"\r\n        : \"var(--colors-ui-base)\",\r\n      transform: \"translateY(-5px)\",\r\n    }),\r\n    menu: (provided) => ({\r\n      ...provided,\r\n      backgroundColor: \"var(--colors-bg)\",\r\n      boxShadow: \"var(--shadow)\",\r\n      height: \"10.75rem\",\r\n      width: \"15.40rem\"\r\n    }),\r\n  },\r\n})`\r\n  font-family: var(--family);\r\n  border: none;\r\n  width: 15.30rem;\r\n`;\r\n\r\nexport default CustomSelect;\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Search from \"./Search\";\r\nimport CustomSelect from \"./CustomSelect\";\r\nimport {\r\n  filterCountries,\r\n  filterByRegion,\r\n} from \"../../../slices/countriesSlice/countriesSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst options = [\r\n  { value: \"Africa\", label: \"Africa\" },\r\n  { value: \"America\", label: \"America\" },\r\n  { value: \"Asia\", label: \"Asia\" },\r\n  { value: \"Europe\", label: \"Europe\" },\r\n  { value: \"Oceania\", label: \"Oceania\" },\r\n];\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nexport default function Controls() {\r\n  const dispatch = useDispatch();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [region, setRegion] = useState(null);\r\n\r\n  console.log(region);\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setSearch(value);\r\n    dispatch(filterCountries(value));\r\n  };\r\n\r\n  const handleSelectorByRegion = (selectedOption) => {\r\n    setRegion(selectedOption);\r\n    dispatch(filterByRegion(selectedOption?.value));\r\n    setSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Search value={search} onChange={handleInputChange} />\r\n      <CustomSelect\r\n        options={options}\r\n        placeholder=\"Filter by Region\"\r\n        isClearable\r\n        isSearchable={false}\r\n        value={region}\r\n        onChange={handleSelectorByRegion}\r\n      />\r\n    </Wrapper>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  padding: 2rem 0;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  align-content: center;\r\n  gap: 4rem;\r\n  \r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: 3rem;\r\n    place-items: center;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n    gap: 2rem;\r\n    place-items: center;\r\n  }\r\n`;\r\n\r\nexport default function CountriesList({ children }) {\r\n  return <Wrapper>{children}</Wrapper>;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\n\r\n\r\nexport const Wrapper = styled.article`\r\n  width: 15.4rem;\r\n  background-color: var(--colors-ui-base);\r\n  border-radius: var(--radius);\r\n  box-shadow: var(--shadow);\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const CardImage = styled(LazyLoadImage)`\r\n  display: block;\r\n  width: 100%;\r\n  height: 9.1875rem;\r\n  object-fit: cover;\r\n  box-shadow: var(--shadow);\r\n`;\r\n\r\nexport const CardBody = styled.div`\r\n  padding: 0.9375rem;\r\n`;\r\n\r\nexport const CardTitle = styled.h3`\r\n  padding: 0.7rem 0.3rem 0;\r\n  margin: 0;\r\n  font-weight: var(--fw-bold);\r\n`;\r\n\r\nexport const CardInfo = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 1rem 0 1rem;\r\n  font-size: var(--fs-sm);\r\n`;\r\n\r\nexport const CardInfoItem = styled.li`\r\n  font-weight: var(--fw-light);\r\n  /* line-height: 1.5; */\r\n  padding: 0.3rem;\r\n`;\r\n\r\nexport const CardInfoTitle = styled.b`\r\n  font-weight: var(--fw-bold);\r\n`;","import {\r\n  Wrapper,\r\n  CardImage,\r\n  CardBody,\r\n  CardTitle,\r\n  CardInfo,\r\n  CardInfoItem,\r\n  CardInfoTitle\r\n} from \"./CardStyled\";\r\n\r\nexport default function Card({ img, name, info = [], handleNavigate }) {\r\n  return (\r\n    <Wrapper onClick={handleNavigate}>\r\n      <CardImage src={img} alt={name} />\r\n      <CardBody>\r\n        <CardTitle>{name}</CardTitle>\r\n        <CardInfo>\r\n          {info.map((el) => (\r\n            <CardInfoItem key={el.title}>\r\n              <CardInfoTitle>{el.title}:</CardInfoTitle> {el.description}\r\n            </CardInfoItem>\r\n          ))}\r\n        </CardInfo>\r\n      </CardBody>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import Card from \"./Card/Card\";\r\n\r\nconst countriesCard = (countries, handleNavigate) =>\r\n  countries?.map((country) => {\r\n    const countriesInfo = {\r\n      img: country.flags.png,\r\n      name: country.name.common,\r\n      info: [\r\n        {\r\n          title: \"Population\",\r\n          description: country.population.toLocaleString(\"en-US\"),\r\n        },\r\n        {\r\n          title: \"Region\",\r\n          description: country.region,\r\n        },\r\n        {\r\n          title: \"Capital\",\r\n          description: country.capital[0],\r\n        },\r\n      ],\r\n      handleNavigate: () => handleNavigate(country.name.common),\r\n    };\r\n    return <Card key={country.cca3} {...countriesInfo} />;\r\n  });\r\n\r\nexport default countriesCard;","import { useEffect } from \"react\";\r\nimport Controls from \"./components/Controls\";\r\nimport CountriesList from \"./components/CountriesList\";\r\nimport countriesCard from \"./components/countriesCard/countriesCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  getCountries,\r\n  selectedCountries,\r\n} from \"../../slices/countriesSlice/countriesSlice\";\r\nimport { useNetwork } from \"../../Hooks/useNetwork\";\r\nimport OfflinePage from \"../Errors/OfflinePage\";\r\n\r\nexport default function HomePage() {\r\n  const isOnline = useNetwork();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { filteredCountries = [] } = useSelector(selectedCountries);\r\n\r\n  const handleNavigate = (name) => navigate(`/details/${name}`);\r\n\r\n  const countriesCardList = countriesCard(filteredCountries, handleNavigate);\r\n\r\n  useEffect(() => {\r\n    if (!filteredCountries.length) {\r\n      dispatch(getCountries());\r\n    }\r\n  }, [filteredCountries, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {isOnline ? (\r\n        <>\r\n          <Controls />\r\n          <CountriesList>{countriesCardList}</CountriesList>\r\n        </>\r\n      ) : (\r\n        <OfflinePage />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["useNetwork","isOnline","setOnline","useState","updateNetworkStatus","navigator","onLine","useEffect","window","addEventListener","removeEventListener","ConnectionIcon","styled","RiWifiOffLine","_templateObject","_taggedTemplateLiteral","Title","h1","_templateObject2","SubTitle","h3","_templateObject3","ReloadButton","button","_templateObject4","OfflinePage","_jsxs","CenteringContainer","children","_jsx","onClick","location","reload","InputContainer","label","Input","input","attrs","type","placeholder","Search","_ref","value","onChange","IoSearch","style","position","Select","styles","control","provided","cursor","backgroundColor","borderRadius","padding","border","boxShadow","width","height","paddingLeft","singleValue","color","dropdownIndicator","indicatorSeparator","display","clearIndicator","option","state","isSelected","transform","menu","options","Wrapper","div","Controls","dispatch","useDispatch","search","setSearch","region","setRegion","console","log","e","target","filterCountries","CustomSelect","isClearable","isSearchable","selectedOption","filterByRegion","CountriesList","article","CardImage","LazyLoadImage","CardBody","CardTitle","CardInfo","ul","_templateObject5","CardInfoItem","li","_templateObject6","CardInfoTitle","b","_templateObject7","Card","img","name","info","handleNavigate","src","alt","map","el","title","description","countriesCard","countries","country","countriesInfo","flags","png","common","population","toLocaleString","capital","cca3","HomePage","navigate","useNavigate","filteredCountries","useSelector","selectedCountries","countriesCardList","concat","length","getCountries","_Fragment"],"sourceRoot":""}